---
import { type Tab, getLocaledName } from "@utils/utils";
import { getCollection } from "astro:content";
import { getLocaleByPath } from "astro:i18n";
const locale = Astro.currentLocale || getLocaleByPath(Astro.url.pathname);

const page = await getCollection("products", ({ data, slug }) => {
	const urlSlug = Astro.params.product || Astro.params.design || "";
	const isSlug = slug.split("/")[1] === urlSlug.split("/")[1];
	const isLocaled = slug.split("/")[0] === locale;
	return data.nested && isSlug && isLocaled;
});
const tabs: Tab[] = page.map((p, idx) => {
	const tabSlug = p.slug.split("/").pop() || "";
	return {
		id: idx + 1,
		name: {
			en: getLocaledName(tabSlug, locale),
			ar: getLocaledName(tabSlug, locale)
		},
		slug: tabSlug
	};
});

const collection = Astro.params.product || Astro.params.design;
const activeId = tabs.find((t) => collection?.endsWith(t.slug))?.id;
---

<div>
	<ul class="flex list-none mx-auto justify-center w-max">
		{
			tabs.map((tab) => {
				return (
					<li
						class:list={[
							"p-4 rounded-t-lg font-bold",
							{
								"bg-gradient-to-b from-skin-accent to-skin-accent-1 underline ":
									tab.id == activeId
							}
						]}
						style={{
							"border-bottom":
								"5px solid hsl(var(--color-accent-1))"
						}}
					>
						<a href={`./${tab.slug}`}>
							{locale == "en" ? tab.name.en : tab.name.ar}
						</a>
					</li>
				);
			})
		}
	</ul>
</div>
