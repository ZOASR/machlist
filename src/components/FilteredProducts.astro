---
import { getCollection } from "astro:content";
import ProductsList from "./svelte/ProductsList.svelte";
import { Icon } from "astro-icon/components";
import { getLangFromUrl } from "src/i18n/utils";
import { getImage } from "astro:assets";

interface Props {
	collection: "products";
}

const locale = getLangFromUrl(Astro.url);

const { collection } = Astro.props;

const products = await getCollection(
	collection,
	({ slug, data }) => !data.nested && slug.startsWith(locale)
);

const mappedProducts = products.map(({ data, slug }) => ({
	slug,
	data
}));

const productImages = await Promise.all(
	mappedProducts.map(async (product) => {
		const image = await getImage({
			src: product.data.cover
		});
		return image;
	})
);

const productsWithOptimizedImages = mappedProducts.map((product, index) => ({
	data: {
		...product.data,
		cover: productImages[index]
	},
	slug: product.slug
}));
---

<ProductsList
	products={productsWithOptimizedImages}
	locale={locale}
	client:only
>
	<Fragment slot="caret-icon">
		<Icon name="radix-icons:caret-sort" />
	</Fragment>
	<Fragment slot="search-icon">
		<Icon name="ic:baseline-search" class={"scale-150"} />
	</Fragment>
</ProductsList>
