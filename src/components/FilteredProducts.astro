---
import ProductCard from "@components/ProductCard.astro";
import { getCollection } from "astro:content";
import ProductsList from "./svelte/ProductsList.svelte";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, useTranslations } from "src/i18n/utils";
import { ui } from "src/i18n/ui";

interface Props {
	collection: "products";
}

const locale = getLangFromUrl(Astro.url);
const t = useTranslations(locale);

const { collection } = Astro.props;

const products = await getCollection(
	collection,
	({ slug, data }) => !data.nested && slug.startsWith(locale)
);
---

<ProductsList
	products={products.map((p) => ({
		...p.data,
		slug: p.slug,
		cover: p.data.cover.src
	}))}
	ui={ui}
	locale={locale}
	client:only
>
	<Fragment slot="caret-icon">
		<Icon name="radix-icons:caret-sort" />
	</Fragment>
	<Fragment slot="search-icon">
		<Icon name="ic:baseline-search" class={"scale-150"} />
	</Fragment>
</ProductsList>
<!--
<div
	dir={locale == "ar" ? "rtl" : "ltr"}
	class="grid md:grid-cols-3 sm:grid-cols-2 overflow-x-clip grid-cols-1 gap-8 max-w-[1200px] w-[95%] md:w-full px-12 mx-auto my-[5rem]"
>
	{
		products
			.sort((a, b) => a.data.order - b.data.order)
			.map((product) => {
				return (
					<ProductCard
						data={product.data}
						slug={`/products/${product.slug}`}
					/>
				);
			})
	}
</div> -->
